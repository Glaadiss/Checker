@startuml

title __SRC's Class Diagram__\n

  package  {
    class Checker {
        {static} + FIRST : PLAYER
        {static} + SECOND : PLAYER
        {static} + rows : int
        {static} - X : int
        {static} - Y : int
        {static} + currentPlayer : PLAYER
        {static} + scanner : Scanner
        {static} - boardDraw : PLAYER[][]
        {static} - pawnsManager : PawnsManager
        {static} + generatePawns()
        {static} + init()
        {static} - getNumberFromUser()
        {static} - askPlayerForCordinates()
        {static} - askPlayerForPointer()
        {static} - askPlayerForMove()
        {static} - getPawnsNumber()
        {static} - isFinish()
        {static} + gameLoop()
        {static} + printBoard()
        {static} + printField()
    }
  }
  

  package  {
    class Constants {
        {static} + ENTER_X : String
        {static} + ENTER_Y : String
        {static} + WHOSE_TURN : String
        {static} + ASK_PAWN : String
        {static} + ASK_PAWN_ERROR : String
        {static} + ASK_MOVE : String
        {static} + ASK_MOVE_ERROR : String
        {static} + HEADER_NUMBERS : String
        {static} + DIVIDER : String
    }
  }
  

  package  {
    class Main {
        {static} + main()
    }
  }
  

  package  {
    class Pawn {
        - x : int
        - y : int
        + Pawn()
        + move()
        - isNoMovement()
        - isNotDiagonally()
        - isToLongJump()
        + isJumpByTwo()
        + getX()
        + getY()
        + getPlayer()
        + setX()
        + setY()
    }
  }
  

  package  {
    enum PLAYER {
      FIRST
      SECOND
    }
  }
  

  package  {
    class PawnsManager {
        - pawns : List<Pawn>
        + getPawns()
        + add()
        + find()
        + setCurrentPlayer()
        + choosePawn()
        - removeEnemyPawnBetween()
        + movePawn()
    }
  }
  

  Pawn o-- PLAYER : player
  Pawn +-down- PLAYER
  PawnsManager o-- PLAYER : currentPlayer
  PawnsManager o-- Pawn : currentPawn


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
