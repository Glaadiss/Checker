@startuml

title __SRC's Class Diagram__\n

  package  {
    class Checker {
        - generatePawns()
        + Checker()
        - getPawnsNumber()
        - isFinish()
        - gameLoop()
    }
  }
  

  package  {
    class Constants {
        {static} - FIRST : PLAYER
        {static} - SECOND : PLAYER
        {static} ~ ROWS : int
        {static} ~ ENTER_X : String
        {static} ~ ENTER_Y : String
        {static} ~ WHOSE_TURN : String
        {static} ~ ASK_PAWN : String
        {static} ~ ASK_PAWN_ERROR : String
        {static} ~ ASK_MOVE : String
        {static} ~ ASK_MOVE_ERROR : String
        {static} ~ HEADER_NUMBERS : String
        {static} ~ DIVIDER : String
        {static} ~ boardDraw : PLAYER[][]
    }
  }
  

  package  {
    enum PLAYER {
      FIRST
      SECOND
    }
  }
  

  package  {
    class Input {
        {static} - X : int
        {static} - Y : int
        {static} - scanner : Scanner
        ~ Input()
        {static} - getNumberFromUser()
        {static} - askPlayerForCordinates()
        ~ askPlayerForPointer()
        ~ askPlayerForMove()
    }
  }
  

  package  {
    class Main {
        {static} + main()
    }
  }
  

  package  {
    class MoveException {
        ~ MoveException()
    }
  }
  

  package  {
    class Pawn {
        + Pawn()
        ~ move()
        ~ getPlayer()
        ~ getPoint()
    }
  }
  

  package  {
    class PawnValidator {
        ~ validate()
    }
  }
  

  package  {
    class PawnsManager {
        - pawns : List<Pawn>
        ~ getPawns()
        ~ add()
        ~ find()
        ~ setCurrentPlayer()
        ~ choosePawn()
        ~ removeEnemyPawnBetween()
        ~ movePawn()
    }
  }
  

  package  {
    class Point {
        - x : int
        - y : int
        ~ Point()
        - getX()
        - getY()
        ~ isNotOnBoard()
        ~ equals()
        ~ isToLongJump()
        ~ isJumpByTwo()
        ~ isDiagonalMove()
        ~ getPointBetweenJump()
    }
  }
  

  package  {
    class Printer {
        ~ Printer()
        ~ printBoard()
        - printField()
    }
  }
  

  Checker o-- PawnsManager : pawnsManager
  Checker o-- Printer : printer
  Checker o-- Input : input
  Constants +-down- PLAYER
  Input o-- PawnsManager : pawnsManager
  Pawn o-- PawnValidator : validator
  Pawn o-- Point : point
  Pawn o-- PLAYER : player
  PawnsManager o-- PLAYER : currentPlayer
  PawnsManager o-- Pawn : currentPawn
  Printer o-- PawnsManager : pawnsManager


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
